//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18444.
// 
#pragma warning disable 1591

namespace SDW_Wellbeing.en706 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://en706.remotestuff.co.uk/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ReadUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback WriteUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadExerciseTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadExerciseOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadWeightOperationCompleted;
        
        private System.Threading.SendOrPostCallback WriteExerciseOperationCompleted;
        
        private System.Threading.SendOrPostCallback WriteWeightOperationCompleted;
        
        private System.Threading.SendOrPostCallback WriteExerciseTypeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::SDW_Wellbeing.Properties.Settings.Default.SDW_Wellbeing_en706_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ReadUserCompletedEventHandler ReadUserCompleted;
        
        /// <remarks/>
        public event WriteUserCompletedEventHandler WriteUserCompleted;
        
        /// <remarks/>
        public event VerifyPasswordCompletedEventHandler VerifyPasswordCompleted;
        
        /// <remarks/>
        public event ChangePasswordCompletedEventHandler ChangePasswordCompleted;
        
        /// <remarks/>
        public event ReadExerciseTypesCompletedEventHandler ReadExerciseTypesCompleted;
        
        /// <remarks/>
        public event ReadExerciseCompletedEventHandler ReadExerciseCompleted;
        
        /// <remarks/>
        public event ReadWeightCompletedEventHandler ReadWeightCompleted;
        
        /// <remarks/>
        public event WriteExerciseCompletedEventHandler WriteExerciseCompleted;
        
        /// <remarks/>
        public event WriteWeightCompletedEventHandler WriteWeightCompleted;
        
        /// <remarks/>
        public event WriteExerciseTypeCompletedEventHandler WriteExerciseTypeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://en706.remotestuff.co.uk/ReadUser", RequestNamespace="http://en706.remotestuff.co.uk/", ResponseNamespace="http://en706.remotestuff.co.uk/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ReadUser(string userId) {
            object[] results = this.Invoke("ReadUser", new object[] {
                        userId});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ReadUserAsync(string userId) {
            this.ReadUserAsync(userId, null);
        }
        
        /// <remarks/>
        public void ReadUserAsync(string userId, object userState) {
            if ((this.ReadUserOperationCompleted == null)) {
                this.ReadUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadUserOperationCompleted);
            }
            this.InvokeAsync("ReadUser", new object[] {
                        userId}, this.ReadUserOperationCompleted, userState);
        }
        
        private void OnReadUserOperationCompleted(object arg) {
            if ((this.ReadUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadUserCompleted(this, new ReadUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://en706.remotestuff.co.uk/WriteUser", RequestNamespace="http://en706.remotestuff.co.uk/", ResponseNamespace="http://en706.remotestuff.co.uk/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode WriteUser(string id, string name, string password, string email, int isAdministrator, int hcAllowAccess) {
            object[] results = this.Invoke("WriteUser", new object[] {
                        id,
                        name,
                        password,
                        email,
                        isAdministrator,
                        hcAllowAccess});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void WriteUserAsync(string id, string name, string password, string email, int isAdministrator, int hcAllowAccess) {
            this.WriteUserAsync(id, name, password, email, isAdministrator, hcAllowAccess, null);
        }
        
        /// <remarks/>
        public void WriteUserAsync(string id, string name, string password, string email, int isAdministrator, int hcAllowAccess, object userState) {
            if ((this.WriteUserOperationCompleted == null)) {
                this.WriteUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWriteUserOperationCompleted);
            }
            this.InvokeAsync("WriteUser", new object[] {
                        id,
                        name,
                        password,
                        email,
                        isAdministrator,
                        hcAllowAccess}, this.WriteUserOperationCompleted, userState);
        }
        
        private void OnWriteUserOperationCompleted(object arg) {
            if ((this.WriteUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WriteUserCompleted(this, new WriteUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://en706.remotestuff.co.uk/VerifyPassword", RequestNamespace="http://en706.remotestuff.co.uk/", ResponseNamespace="http://en706.remotestuff.co.uk/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode VerifyPassword(string userId, string password) {
            object[] results = this.Invoke("VerifyPassword", new object[] {
                        userId,
                        password});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyPasswordAsync(string userId, string password) {
            this.VerifyPasswordAsync(userId, password, null);
        }
        
        /// <remarks/>
        public void VerifyPasswordAsync(string userId, string password, object userState) {
            if ((this.VerifyPasswordOperationCompleted == null)) {
                this.VerifyPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyPasswordOperationCompleted);
            }
            this.InvokeAsync("VerifyPassword", new object[] {
                        userId,
                        password}, this.VerifyPasswordOperationCompleted, userState);
        }
        
        private void OnVerifyPasswordOperationCompleted(object arg) {
            if ((this.VerifyPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyPasswordCompleted(this, new VerifyPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://en706.remotestuff.co.uk/ChangePassword", RequestNamespace="http://en706.remotestuff.co.uk/", ResponseNamespace="http://en706.remotestuff.co.uk/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ChangePassword(string userId, string oldPassword, string newPassword) {
            object[] results = this.Invoke("ChangePassword", new object[] {
                        userId,
                        oldPassword,
                        newPassword});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string userId, string oldPassword, string newPassword) {
            this.ChangePasswordAsync(userId, oldPassword, newPassword, null);
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string userId, string oldPassword, string newPassword, object userState) {
            if ((this.ChangePasswordOperationCompleted == null)) {
                this.ChangePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePasswordOperationCompleted);
            }
            this.InvokeAsync("ChangePassword", new object[] {
                        userId,
                        oldPassword,
                        newPassword}, this.ChangePasswordOperationCompleted, userState);
        }
        
        private void OnChangePasswordOperationCompleted(object arg) {
            if ((this.ChangePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangePasswordCompleted(this, new ChangePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://en706.remotestuff.co.uk/ReadExerciseTypes", RequestNamespace="http://en706.remotestuff.co.uk/", ResponseNamespace="http://en706.remotestuff.co.uk/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ReadExerciseTypes() {
            object[] results = this.Invoke("ReadExerciseTypes", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ReadExerciseTypesAsync() {
            this.ReadExerciseTypesAsync(null);
        }
        
        /// <remarks/>
        public void ReadExerciseTypesAsync(object userState) {
            if ((this.ReadExerciseTypesOperationCompleted == null)) {
                this.ReadExerciseTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadExerciseTypesOperationCompleted);
            }
            this.InvokeAsync("ReadExerciseTypes", new object[0], this.ReadExerciseTypesOperationCompleted, userState);
        }
        
        private void OnReadExerciseTypesOperationCompleted(object arg) {
            if ((this.ReadExerciseTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadExerciseTypesCompleted(this, new ReadExerciseTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://en706.remotestuff.co.uk/ReadExercise", RequestNamespace="http://en706.remotestuff.co.uk/", ResponseNamespace="http://en706.remotestuff.co.uk/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ReadExercise(string userId, string fromDate, string toDate) {
            object[] results = this.Invoke("ReadExercise", new object[] {
                        userId,
                        fromDate,
                        toDate});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ReadExerciseAsync(string userId, string fromDate, string toDate) {
            this.ReadExerciseAsync(userId, fromDate, toDate, null);
        }
        
        /// <remarks/>
        public void ReadExerciseAsync(string userId, string fromDate, string toDate, object userState) {
            if ((this.ReadExerciseOperationCompleted == null)) {
                this.ReadExerciseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadExerciseOperationCompleted);
            }
            this.InvokeAsync("ReadExercise", new object[] {
                        userId,
                        fromDate,
                        toDate}, this.ReadExerciseOperationCompleted, userState);
        }
        
        private void OnReadExerciseOperationCompleted(object arg) {
            if ((this.ReadExerciseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadExerciseCompleted(this, new ReadExerciseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://en706.remotestuff.co.uk/ReadWeight", RequestNamespace="http://en706.remotestuff.co.uk/", ResponseNamespace="http://en706.remotestuff.co.uk/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ReadWeight(string userId, string fromDate, string toDate) {
            object[] results = this.Invoke("ReadWeight", new object[] {
                        userId,
                        fromDate,
                        toDate});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ReadWeightAsync(string userId, string fromDate, string toDate) {
            this.ReadWeightAsync(userId, fromDate, toDate, null);
        }
        
        /// <remarks/>
        public void ReadWeightAsync(string userId, string fromDate, string toDate, object userState) {
            if ((this.ReadWeightOperationCompleted == null)) {
                this.ReadWeightOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadWeightOperationCompleted);
            }
            this.InvokeAsync("ReadWeight", new object[] {
                        userId,
                        fromDate,
                        toDate}, this.ReadWeightOperationCompleted, userState);
        }
        
        private void OnReadWeightOperationCompleted(object arg) {
            if ((this.ReadWeightCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadWeightCompleted(this, new ReadWeightCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://en706.remotestuff.co.uk/WriteExercise", RequestNamespace="http://en706.remotestuff.co.uk/", ResponseNamespace="http://en706.remotestuff.co.uk/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode WriteExercise(string id, string exerciseDate, string userId, string exerciseType, int duration) {
            object[] results = this.Invoke("WriteExercise", new object[] {
                        id,
                        exerciseDate,
                        userId,
                        exerciseType,
                        duration});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void WriteExerciseAsync(string id, string exerciseDate, string userId, string exerciseType, int duration) {
            this.WriteExerciseAsync(id, exerciseDate, userId, exerciseType, duration, null);
        }
        
        /// <remarks/>
        public void WriteExerciseAsync(string id, string exerciseDate, string userId, string exerciseType, int duration, object userState) {
            if ((this.WriteExerciseOperationCompleted == null)) {
                this.WriteExerciseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWriteExerciseOperationCompleted);
            }
            this.InvokeAsync("WriteExercise", new object[] {
                        id,
                        exerciseDate,
                        userId,
                        exerciseType,
                        duration}, this.WriteExerciseOperationCompleted, userState);
        }
        
        private void OnWriteExerciseOperationCompleted(object arg) {
            if ((this.WriteExerciseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WriteExerciseCompleted(this, new WriteExerciseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://en706.remotestuff.co.uk/WriteWeight", RequestNamespace="http://en706.remotestuff.co.uk/", ResponseNamespace="http://en706.remotestuff.co.uk/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode WriteWeight(string id, string weightDate, string userId, int weight) {
            object[] results = this.Invoke("WriteWeight", new object[] {
                        id,
                        weightDate,
                        userId,
                        weight});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void WriteWeightAsync(string id, string weightDate, string userId, int weight) {
            this.WriteWeightAsync(id, weightDate, userId, weight, null);
        }
        
        /// <remarks/>
        public void WriteWeightAsync(string id, string weightDate, string userId, int weight, object userState) {
            if ((this.WriteWeightOperationCompleted == null)) {
                this.WriteWeightOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWriteWeightOperationCompleted);
            }
            this.InvokeAsync("WriteWeight", new object[] {
                        id,
                        weightDate,
                        userId,
                        weight}, this.WriteWeightOperationCompleted, userState);
        }
        
        private void OnWriteWeightOperationCompleted(object arg) {
            if ((this.WriteWeightCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WriteWeightCompleted(this, new WriteWeightCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://en706.remotestuff.co.uk/WriteExerciseType", RequestNamespace="http://en706.remotestuff.co.uk/", ResponseNamespace="http://en706.remotestuff.co.uk/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode WriteExerciseType(string id, string description) {
            object[] results = this.Invoke("WriteExerciseType", new object[] {
                        id,
                        description});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void WriteExerciseTypeAsync(string id, string description) {
            this.WriteExerciseTypeAsync(id, description, null);
        }
        
        /// <remarks/>
        public void WriteExerciseTypeAsync(string id, string description, object userState) {
            if ((this.WriteExerciseTypeOperationCompleted == null)) {
                this.WriteExerciseTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWriteExerciseTypeOperationCompleted);
            }
            this.InvokeAsync("WriteExerciseType", new object[] {
                        id,
                        description}, this.WriteExerciseTypeOperationCompleted, userState);
        }
        
        private void OnWriteExerciseTypeOperationCompleted(object arg) {
            if ((this.WriteExerciseTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WriteExerciseTypeCompleted(this, new WriteExerciseTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ReadUserCompletedEventHandler(object sender, ReadUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void WriteUserCompletedEventHandler(object sender, WriteUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WriteUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WriteUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void VerifyPasswordCompletedEventHandler(object sender, VerifyPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ChangePasswordCompletedEventHandler(object sender, ChangePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ReadExerciseTypesCompletedEventHandler(object sender, ReadExerciseTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadExerciseTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadExerciseTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ReadExerciseCompletedEventHandler(object sender, ReadExerciseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadExerciseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadExerciseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ReadWeightCompletedEventHandler(object sender, ReadWeightCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadWeightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadWeightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void WriteExerciseCompletedEventHandler(object sender, WriteExerciseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WriteExerciseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WriteExerciseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void WriteWeightCompletedEventHandler(object sender, WriteWeightCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WriteWeightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WriteWeightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void WriteExerciseTypeCompletedEventHandler(object sender, WriteExerciseTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WriteExerciseTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WriteExerciseTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591